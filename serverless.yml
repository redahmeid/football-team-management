org: redahmeid
app: football-team-management
service: football-team-management
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: eu-west-2

functions:
  create_club:
    handler: handler.create_club
    events:
      - http:
          path: /clubs
          method: post
  create_club_admin:
    handler: handler.create_club_admin
    events:
      - http:
          path: /clubs/{club_id}/admins
          method: post
  create_team_admin:
    handler: handler.create_team_admin
    events:
      - http:
          path: /teams/{team_id}/admins
          method: post
  create_team_players:
    handler: handler.create_team_players
    events:
      - http:
          path: /teams/{team_id}/players
          method: post
  create_team_player:
    handler: handler.create_team_player
    events:
      - http:
          path: /teams/{team_id}/player
          method: post
  create_team:
    handler: handler.create_team
    events:
      - http:
          path: /teams
          method: post
  create_team_fixtures:
    handler: handler.create_team_fixtures
    events:
      - http:
          path: /teams/{team_id}/matches
          method: post
  create_user:
    handler: handler.create_user
    events:
      - http:
          path: /users
          method: post
  plan_match_day_squad:
    handler: handler.plan_day_match_day_squad
    events:
      - http:
          path: /matches/{match_id}/planned_squad
          method: post
  retrieve_match_day_squad:
    handler: handler.retrieve_planned_match_squad
    events:
      - http:
          path: /matches/{match_id}/planned_squad
          method: get
  retrieve_team_squad:
    handler: handler.list_players_by_team
    events:
      - http:
          path: /teams/{team_id}/players
          method: get
  retrieve_teams_by_club:
    handler: handler.list_teams_by_club
    events:
      - http:
          path: /clubs/{club_id}/teams
          method: get
          cors: true
  retrieve_matches_by_team:
    handler: handler.list_matches_by_team
    events:
      - http:
          path: /teams/{team_id}/matches
          method: get
          cors: true
  retrieve_team_summary:
    handler: handler.retrieve_team_summary
    events:
      - http:
          path: /teams/{team_id}
          method: get
          cors: true
  delete_player:
    handler: handler.delete_player
    events:
      - http:
          path: /players/{player_id}
          method: delete
          cors: true
  retrieve_club:
    handler: handler.retrieve_club_summary
    events:
      - http:
          path: /clubs/{club_id}
          method: get
          cors: true
  retrieve_next_match_by_team:
    handler: handler.retrieve_next_match_by_team
    events:
      - http:
          path: /teams/{team_id}/next_match
          method: get
          cors: true
  
  create_team_screen_bff:
    handler: bffs.create_team_screen.submit_team
    events:
      - http:
          path: /bff/create_team_screen
          method: post
          cors: true
  view_team_screen_bff:
    handler: bffs.create_team_screen.enter_screen
    events:
      - http:
          path: /bff/view_team_screen
          method: get
          cors: true
  user_homepage_bff:
    handler: bffs.user_homepage.enter_screen
    events:
      - http:
          path: /bff/user_homepage
          method: get
          cors: true
  create_match_day_bff:
    handler: bffs.match_detail_screen.enter_screen
    events:
      - http:
          path: /bff/match_details
          method: get
          cors: true
  add_to_starting_lineup_bff:
    handler: bffs.match_detail_screen.select_remove_from_starting_lineup
    events:
      - http:
          path: /bff/match_details/starting_lineup
          method: patch
          cors: true
  

plugins:
  - serverless-dotenv-plugin
  - serverless-python-requirements
  - serverless-prune-plugin
custom:
  pythonRequirements:
    dockerizePip: non-linux
    

package:
  patterns:
    - '!node_modules/**'
    - '!venv/**'
